exports.es = {
  apiInviteMessageContent: (name) => `${name} se complace en invitarlo a unirse a nuestra comunidad en Hylo.`,
  apiInviteMessageSubject: (name) => `Únete a mí ${name} en Hylo!`,
  clientInviteSubjectDefault: (name) => `You've been invited to join ${name} on Hylo`,
  clientInviteMessageDefault: ({userName, groupName}) => `Hola ${userName}, <br><br> Estamos emocionados de darle la bienvenida a nuestra comunidad. Haga clic a continuación para unirse ${groupName} en Hylo.`,
  createInvitationSubject: (name) => `Únete a mí ${name} en Hylo!`,
  CreatorEmail: () => 'Correo Electrónico del Creador',
  CreatorName: () => 'Nombre del Creador',
  CreatorURL: () => 'URL del creador',
  clearedPostEmailContent: ({ post, group }) => `Se ha aprobado una acción de moderación para la publicación "${post.get('title')}" en el groupo ${group.get('name')}\n`,
  Group: () => 'Grupo',
  flaggedPostEmailContent: ({ post, group }) => `Se ha creado una acción de moderación para la publicación "${post.get('title')}" en el groupo ${group.get('name')}\n`,
  groupCreatedNotifySubject: (name) => `Nuevo Grupo de Hylo Creado: ${name}`,
  moderatorClearedYouFlag: () => 'El moderador eliminó tu denuncia',
  moderatorClearedFlagFromPost: () => 'El moderador eliminó una denuncia de tu publicación',
  Name: () => 'Nombre',
  textForAnnouncement: ({ groupName, person, postName }) => `${person} envió un anuncio titulado "${postName}" en ${groupName}`,
  textForApprovedJoinRequest: ({actor, groupName}) => `${actor.get('name')} aprobó tu solicitud para unirte ${groupName}`,
  textForCommentImage: person => `${person} envió una imagen`,
  textForCommentMention: ({person, blurb, postName}) => `${person} te mencionó: "${blurb}" (en "${postName}")`,
  textForComment: ({person, blurb, postName}) => `${person}: "${blurb}" (en "${postName}")`,
  textForContribution: post => `Se le ha agregado como colaborador de la solicitud: "${post.summary()}"`,
  textForDonationTo: ({amount, postName}) => `Contribuiste con $${amount} a "${postName}"`,
  textForDonationFrom: ({amount, actor, postName}) => `${actor.get('name')} contribuyó $${amount} a "${postName}"`,
  textForEventInvitation: ({actor, postName}) => `${actor.get('name')} Julia te invitó a "${postName}"`,
  textForJoinRequest: ({actor, groupName}) => `${actor.get('name')} pidió unirte ${groupName}`,
  textForGroupInvitation: ({actor, groupName}) => `${actor.get('name')} te invitó a unirte ${groupName}`,
  textForGroupInvitationAccepted: ({actor, groupName}) => `${actor.get('name')} aceptó tu invitación para unirse ${groupName}`,
  textForGroupChildGroupInvite: ({actor, parentGroup, childGroup}) => `${actor.get('name')} invitó a tu grupo ${childGroup.name} a unirse a su grupo ${parentGroup.name}`,
  textForGroupChildGroupInviteAcceptedParentModerator: ({actor, parentGroup, childGroup}) => `${actor.get('name')} aceptó su invitación de su grupo ${childGroup.name} para unirse a su grupo ${parentGroup.name}`,
  textForGroupChildGroupInviteAcceptedChildModerator: ({actor, parentGroup, childGroup}) => `${actor.get('name')} aceptó la invitación de su grupo ${childGroup.name} para unirse a su grupo. ${parentGroup.name}`,
  textForGroupChildGroupInviteAcceptedParentMember: ({parentGroup, childGroup}) => `El grupo ${childGroup.name} acaba de unirse a su grupo ${parentGroup.name}!`,
  textForGroupChildGroupInviteAcceptedChildMember: ({parentGroup, childGroup}) => `Tu grupo ${childGroup.name} se ha unido a ${parentGroup.name}. Ya puedes unirte a ${parentGroup.name}!`,
  textForGroupParentGroupJoinRequest: ({actor, parentGroup, childGroup}) => `${actor.get('name')} solicita agregar su grupo ${childGroup.name} como miembro de su grupo ${parentGroup.name}`,
  textForGroupParentGroupJoinRequestAcceptedParentModerator: ({actor, parentGroup, childGroup}) => `${actor.get('name')} aceptó una solicitud para agregar ${childGroup.name} a su grupo ${parentGroup.name}`,
  textForGroupParentGroupJoinRequestAcceptedChildModerator: ({actor, parentGroup, childGroup}) => `Tu grupo ${childGroup.name} ha sido aceptado como miembro de ${parentGroup.name} por ${actor.get('name')}`,
  textForGroupParentGroupJoinRequestAcceptedParentMember: ({parentGroup, childGroup}) => `¡El grupo ${childGroup.name} acaba de unirse a su grupo ${parentGroup.name}!`,
  textForGroupParentGroupJoinRequestAcceptedChildMember: ({parentGroup, childGroup}) => `Tu grupo ${childGroup.name} te ha unido a ${parentGroup.name}.`,
  newSavedSearchResults: (name) => `Nuevos resultados de búsqueda guardados en ${name}`,
  recentActivityFrom: (name) => `Actividad reciente de ${name}`,
  textForPostMention: ({ groupName, person, postName }) => `${person} te mencionó en "${postName}" en ${groupName}`,
  textForPost: ({ firstTag, groupName, person, postName }) => `${person} publicó "${postName}" en ${groupName}${firstTag ? ` #${firstTag}` : ''}`,
  textForVoteReset: ({ person, postName, groupName }) => `${person} cambió las opciones de propuesta: "${postName}" en ${groupName}. Esto ha reiniciado los votos`,
  youFlaggedAPost: () => 'Has denunciado una publicación',
  yourPostWasFlagged: () => 'Tu publicación fue denunciada'
}
